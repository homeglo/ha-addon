#!/usr/bin/with-contenv bashio
# 00-ha-connection.sh — set HA* env vars and generate ha-config.php
# Runs in /etc/cont-init.d (executed as root before services start)

set -e

log() { echo "[00-ha-connection] $*"; }

#!/usr/bin/with-contenv bashio
set -e

log() { echo "[00-ha-connection] $*"; }

# ── 1.  Load /app/homeglo/.env (if present) ──────────────────────

source_dotenv() {
    local dotenv="/app/homeglo/.env"
    [[ -f "$dotenv" ]] || { log "No .env file found, skipping"; return; }

    log "Loading variables from $dotenv"
    # shellcheck disable=SC1090
    (
      # Create a subshell so we don't pollute the caller if parsing fails
      set -a        # export everything we `source`
      # Strip comments, ignore blank lines, respect quoted values
      # shellcheck disable=SC2016
      eval "$(grep -E '^[A-Za-z_][A-Za-z0-9_]*=' "$dotenv" \
              | sed 's/[[:space:]]*#[^"\x27].*$//')" || {
          log "WARNING: Failed to parse $dotenv"
      }
      set +a
      # Persist each new/updated var
      while IFS='=' read -r k v; do
          [[ -n "$k" ]] || continue
          echo -n "${!k}" > "/var/run/s6/container_environment/$k"
      done < <(grep -E '^[A-Za-z_][A-Za-z0-9_]*=' "$dotenv")
    )
}
source_dotenv

log "Detecting Home Assistant connection mode…"

# Helper to persist an env var for the whole container lifecycle
persist_env() {
    local name="$1" value="$2"
    # s6-overlay: any file here becomes an env var for every subsequent process
    echo -n "${value}" > "/var/run/s6/container_environment/${name}"
}

# ------------------------------------------------------------------
# 1) Detect token and choose mode
# ------------------------------------------------------------------
SUPERVISOR_TOKEN_VALUE="$(bashio::var.json SUPERVISOR_TOKEN 2>/dev/null || true)"

if [[ -n "${SUPERVISOR_TOKEN_VALUE}" ]]; then
    MODE="ADDON"
    HA_TOKEN="${SUPERVISOR_TOKEN_VALUE}"
    HA_WEBSOCKET_URL="ws://supervisor/core/api/websocket"
    HA_REST_URL="http://supervisor/core/api"
    log "Running in ADDON mode (supervisor token present)"
else
    MODE="STANDALONE"
    # Look for user-supplied envs (already present if user passed them to docker)
    HA_TOKEN="${HA_TOKEN:-${HA_ACCESS_TOKEN:-}}"
    HA_WEBSOCKET_URL="${HA_WEBSOCKET_URL:-ws://homeassistant.local:8123/api/websocket}"
    HA_REST_URL="${HA_REST_URL:-http://homeassistant.local:8123/api}"
    log "Running in STANDALONE mode"
fi

# ------------------------------------------------------------------
# 2) Persist env vars for downstream processes
# ------------------------------------------------------------------
persist_env HA_TOKEN         "${HA_TOKEN}"
persist_env HA_WEBSOCKET_URL "${HA_WEBSOCKET_URL}"
persist_env HA_REST_URL      "${HA_REST_URL}"

# ------------------------------------------------------------------
# 3) Generate .env file for PHP application
# ------------------------------------------------------------------
cat > /app/homeglo/.env <<ENV
# Home Assistant connection configuration
# Generated by 00-ha-connection.sh in ${MODE} mode
HA_TOKEN=${HA_TOKEN}
HA_WEBSOCKET_URL=${HA_WEBSOCKET_URL}
HA_REST_URL=${HA_REST_URL}
ENV
chmod 640 /app/homeglo/.env
log "Wrote /app/homeglo/.env for PHP application"

# ------------------------------------------------------------------
# 4) Copy addon YAML (optional convenience)
# ------------------------------------------------------------------
if [[ -f /app/config.yaml ]]; then
    cp /app/config.yaml /data/addon-config.yaml
    chmod 640 /data/addon-config.yaml
    log "Copied addon config to /data"
fi

log "Environment prepared: ${MODE}"